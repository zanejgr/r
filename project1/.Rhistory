layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sdd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
myDCurve(10,4)
layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
myDCurve(10,4)
for(i in 1:4)
(data.frame(means=c(10,10,5,5),sds=c(4,2,10,0.5)))[,i]%$%
(myDCurve())%>%plot
layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
myDCurve(10,4)
for(i in 1:4)
(data.frame(means=c(10,10,5,5),sds=c(4,2,10,0.5)))[,i]%$%
(myDCurve())
layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
for(i in 1:4)
(data.frame(means=c(10,10,5,5),sds=c(4,2,10,0.5)))[,i]%>%
(myDCurve())
layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
for(i in 1:4)
(data.frame(means=c(10,10,5,5),sds=c(4,2,10,0.5)))[,i]%>%
myDCurve()
layout(matrix(1:4, nr=2,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
for(i in 1:4)
(data.frame(mean=c(10,10,5,5),sd=c(4,2,10,0.5)))[,i]%$%
myDCurve()
layout(matrix(1:8, nr=4,nc=2))
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
for(i in 1:2) map2(data.frame(0,4,10,-2),data.frame(1,2,4,0.5),myDCurve)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
layout(matrix(1:4, nr=2,nc=2))
map2(data.frame(0,4,10,-2),data.frame(1,2,4,0.5),myDCurve)
# x values corresponding to the x - cords of points on the curve
xcurve=seq(10,25,length=1000)
# Y values corresponding t0 the x values
ycurve=dnorm(xcurve,mean=10,sd=4)
# Fill in the polygon with the given vertices
polygon(c(10,xcurve,25),c(0,ycurve,0),col="Red")
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
layout(matrix(1:4, nr=2,nc=2))
map2(data.frame(0,4,10,-2),data.frame(1,2,4,0.5),myDCurve)]
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{curve(dnorm(x, mean,sd),xlim=c(lb,ub))}
layout(matrix(1:4, nr=2,nc=2))
map2(data.frame(0,4,10,-2),data.frame(1,2,4,0.5),myDCurve)
### Draw a normal curve
curve(dnorm(x, mean=10,sd=4),xlim=c(-10,30))
# x values corresponding to the x - cords of points on the curve
xcurve=seq(10,25,length=1000)
# Y values corresponding t0 the x values
ycurve=dnorm(xcurve,mean=10,sd=4)
# Fill in the polygon with the given vertices
polygon(c(10,xcurve,25),c(0,ycurve,0),col="Red")
c(1,2,3,4,5)[1]
c(1,2,3,4,5)[3]
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lb=0,ub=0){
myDCurve(mean,sd)
seq(2,3,length=1000)%>%
polygon(c(lb,.,ub),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
layout(matrix(1:4, nr=2,nc=2))
myPNCurve(0,1,2,999)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lb=0,ub=0){
myDCurve(mean,sd)
seq(2,3,length=1000)%>%
polygon(c(lb,.,ub),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lb=0,ub=0){
myDCurve(mean,sd)
seq(2,3,length=1000)%>%
polygon(c(lb,.,ub),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lb=0,ub=0){
myDCurve(mean,sd)
seq(2,3,length=1000)%>%
polygon(c(lb,.,ub),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myPNCurve<-function(mean=0,sd=1,lb=0,ub=0){
myDCurve(mean,sd)
seq(2,3,length=1000)%>%
polygon(c(lb,.,ub),c(0,dnorm(.,mean,sd),0),col="Red")
}
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=0,ut=0){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myDCurve()
myDCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myPNCurve(0,1,2,999)
myPNCurve
myPNCurve()
myPNCurve
myPNCurve()
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(magrittr)
library(purrr)
getwd()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(.
,c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myPNCurve()
myPNCurve()
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(magrittr)
library(purrr)
getwd()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,lt,.,ut,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(0,1,2,999)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,lt,.,ut,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,lt,.,ut,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,lt,.,ut,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
View(myDCurve)
View(myPNCurve)
myPNCurve()
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myPNCurve()
debug(myPNCurve())
myPNCurve()
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(.,c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myPNCurve()
View(x)
myPNCurve
myPNCurve()
View(myDCurve)
View(myPNCurve)
View(myPNCurve)
myPNCurve()
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myPNCurve
myPNCurve()
myPNCurve
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red",recycle=TRUE)
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red",recycle=TRUE)
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
knitr::opts_chunk$set(echo = TRUE)
getwd()
library(magrittr)
library(purrr)
getwd()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(lt,.,ut),c(0,dnorm(.,mean,sd),0),col="Red",recycle=TRUE)
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve()
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(.),c(dnorm(.,mean,sd)),col="Red",recycle=TRUE)
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(1,10,2,10)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(c(.),c(dnorm(.,mean,sd)),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(1,10,2,10)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(x=c(.),y=c(dnorm(.,mean,sd)),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(1,10,-1,30)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-1,ut=1){
myDCurve(mean,sd)
seq(lt,ut,length=1000)%>%
polygon(x=c(lt,.,ut),y=c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
map2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
myPNCurve(1,10,-1,30)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-999,ut=999){
myDCurve(mean,sd)
seq(lt,ut,length=100000)%>%
polygon(x=c(lt,.,ut),y=c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
walk2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
layout(matrix(1:4, nr=2,nc=2))
pmap(list(
mean=c(1,4,10,-2),
sd=c(1,2,4,.5),
lt=c(2,1,-999,-3),
ut=c(999,5,10,-2)),
myPNCurve()
)
pwalk(list(
mean=c(1,4,10,-2),
sd=c(1,2,4,.5),
lt=c(2,1,-999,-3),
ut=c(999,5,10,-2)),
myPNCurve()
)
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-999,ut=999){
myDCurve(mean,sd)
seq(lt,ut,length=100000)%>%
polygon(x=c(lt,.,ut),y=c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
walk2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
layout(matrix(1:4, nr=2,nc=2))
pwalk(list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),myPNCurve())
pwalk(list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),myPNCurve())
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-999,ut=999){
myDCurve(mean,sd)
seq(lt,ut,length=100000)%>%
polygon(x=c(lt,.,ut),y=c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
walk2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
layout(matrix(1:4, nr=2,nc=2))
pmap(list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),myPNCurve())
View(myPNCurve)
pmap(list(mean=c(1,4,10ist(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),myPNCurve())
list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3)
)
pmap(list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),
)
list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2))
list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2))%>%class
list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2))%>%typedef
list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2))%>%str
myDCurve<-function(mean=0,sd=1,lb=mean-3*sd,ub=mean+3*sd)
{val<-curve(dnorm(x, mean,sd),xlim=c(lb,ub))
val
return(val)
}
myPNCurve<-function(mean=0,sd=1,lt=-999,ut=999){
myDCurve(mean,sd)
seq(lt,ut,length=100000)%>%
polygon(x=c(lt,.,ut),y=c(0,dnorm(.,mean,sd),0),col="Red")
}
layout(matrix(1:4, nr=2,nc=2))
walk2(c(10,10,5,5),c(4,2,10,.5),myDCurve)
layout(matrix(1:4, nr=2,nc=2))
pmap(list(mean=c(1,4,10,-2),sd=c(1,2,4,.5),lt=c(2,1,-999,-3),ut=c(999,5,10,-2)),myPNCurve)
